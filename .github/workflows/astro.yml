# Sample workflow for building and deploying an Astro site to GitHub Pages
#
# To get started with Astro see: https://docs.astro.build/en/getting-started/
#
name: Deploy Astro site to Server

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  BUILD_PATH: "." # default value when not using subfolders
  # BUILD_PATH: subfolder

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup pnpm
        # You may pin to the exact commit or the version.
        # uses: pnpm/action-setup@a3252b78c470c02df07e9d59298aecedc3ccdd6d
        uses: pnpm/action-setup@v3.0.0
        with:
          version: 8.15.4
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4
      - name: Install dependencies
        run: |
          pnpm i
        working-directory: ${{ env.BUILD_PATH }}
      - name: Build with Astro
        run: |
          pnpm build
        working-directory: ${{ env.BUILD_PATH }}
      - name: FTP/SFTP file deployer
        # You may pin to the exact commit or the version.
        # uses: milanmk/actions-file-deployer@c1baf767551098897cadabc77c520a9be30dc916
        uses: milanmk/actions-file-deployer@1.14
        with:
          # Remote file transfer protocol (ftp, sftp)
          remote-protocol: ftp
          # Remote host
          remote-host: ${{secrets.SERVER_ADDRESS}}
          # Remote port
          remote-port: 21
          # FTP/SSH username
          remote-user: ${{secrets.SERVER_USERNAME}}
          # FTP/SSH password
          remote-password: ${{secrets.SERVER_PASSWORD}}
          # SSH private key of user
          # ssh-private-key: # optional
          # Enable proxy for FTP connection (true, false)
          # proxy: 
          # Proxy host
          # proxy-host: # optional
          # Proxy port
          # proxy-port: # optional, default is 22
          # Proxy forwarding port
          # proxy-forwarding-port: # optional, default is 1080
          # Proxy username
          # proxy-user: # optional
          # Proxy SSH private key of user
          # proxy-private-key: # optional
          # Local path to repository
          local-path: ${{ env.BUILD_PATH }}/dist/
          # Remote path on host
          remote-path: ${{ secrets.SERVER_PATH }} # default is .
          # File synchronization (delta, full)
          sync: full # default is delta
          # Files to exclude from delta sync
          # sync-delta-excludes: # optional
          # # Additional command arguments for SSH client
          # ssh-options: # optional
          # # Additional command arguments for FTP client (lftp)
          # ftp-options: # optional
          # # Additional command arguments for mirroring (lftp)
          # ftp-mirror-options: # optional
          # # Additional ftp commands to run after synchronization (lftp)
          # ftp-post-sync-commands: # optional
          # # Send webhook event notifications
          # webhook: # optional
          # Upload logs to artifacts
          artifacts: true
          # Enable debug information (true, false)
          debug: true
                
