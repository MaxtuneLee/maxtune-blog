name: Deploy Astro site to Server

on:
  push:
    branches: ["main"]

  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  BUILD_PATH: "." # default value when not using subfolders

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    environment: Main-server
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build Docker image
        run: |
          docker buildx build --platform linux/amd64 -t max/maxtune-blog --output type=docker,dest=maxtune-blog.tar .

      - name: Extract image
        run: |
          [ -d maxtune-blog ] || mkdir maxtune-blog
          tar -xf maxtune-blog.tar -C maxtune-blog

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: maxtune-blog
          path: ./maxtune-blog
          
  Deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: maxtune-blog
          path: ./maxtune-blog

      - name: Copy Docker image to server
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{ secrets.DEPLOY_KEY }}
          REMOTE_PORT: ${{ secrets.SERVER_PORT }}
          ARGS: "-ravc -i --delete"
          SOURCE: "./maxtune-blog/"
          REMOTE_HOST: ${{ secrets.SERVER_ADDRESS }}
          REMOTE_USER: ${{ secrets.SERVER_USERNAME }}
          TARGET: /tmp/maxtune-blog
          SCRIPT_BEFORE: |
            [ -d /tmp/maxtune-blog ] || mkdir /tmp/maxtune-blog
          SCRIPT_AFTER: |
            cd /tmp/maxtune-blog
            tar -cf maxtune-blog.tar *
            ### Notice: run for develop ###
            # Stop and remove existing container if it exists
            if [ "$(docker ps -aq -f name=maxtune-blog)" ]; then
              docker stop maxtune-blog
              docker rm maxtune-blog
            fi
            # Remove existing image if it exists
            if [ "$(docker images -q max/maxtune-blog)" ]; then
              docker rmi max/maxtune-blog
            fi
            docker load -i maxtune-blog.tar
            docker run --restart always -d --name maxtune-blog -p 4321:8080 max/maxtune-blog 
